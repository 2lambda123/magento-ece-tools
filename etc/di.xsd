<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Schema for DI configuration
 *
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexType name="argumentType" abstract="true" mixed="true">
        <xs:attribute name="name" use="required"/>
    </xs:complexType>

    <xs:complexType name="itemType" abstract="true" mixed="true">
        <xs:attribute name="sortOrder" use="required"/>
    </xs:complexType>

    <xs:element name="config">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="preference" type="preferenceType" minOccurs="0" maxOccurs="unbounded" />
                <xs:element name="type" type="typeType" minOccurs="0" maxOccurs="unbounded" />
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="preferenceType">
        <xs:annotation>
            <xs:documentation>
                Preference help Object Manager to choose class for corresponding interface
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="for" type="phpClassName" use="required"/>
        <xs:attribute name="type" type="phpClassName" use="required" />
    </xs:complexType>

    <xs:complexType name="typeType">
        <xs:annotation>
            <xs:documentation>
                With 'type' tag you can point parameters and plugins for certain class
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="arguments" type="argumentsType" minOccurs="0" maxOccurs="1">
                <xs:key name="argumentName">
                    <xs:selector xpath="argument"></xs:selector>
                    <xs:field xpath="@name"></xs:field>
                </xs:key>
            </xs:element>
            <xs:element name="composite" type="compositesType" minOccurs="0" maxOccurs="1" />
        </xs:choice>
        <xs:attribute name="name" type="phpClassName" use="required" />
        <xs:attribute name="shared" type="xs:boolean" use="optional" />
    </xs:complexType>

    <xs:simpleType name="phpClassName">
        <xs:annotation>
            <xs:documentation>
                A string that matches a Fully Qualified Class Name from PHP, especially not starting
                with a backslash as this is an invalid character to start a class name with but a
                somewhat common mistake so this simple type can be used to validate against it
                already
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="(\\?[a-zA-Z_&#x7f;-&#xff;][a-zA-Z0-9_&#x7f;-&#xff;]*)(\\[a-zA-Z_&#x7f;-&#xff;][a-zA-Z0-9_&#x7f;-&#xff;]*)*"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="argumentsType">
        <xs:sequence>
            <xs:element name="argument" type="argumentType" minOccurs="1" maxOccurs="unbounded">
                <xs:key name="argumentItemName">
                    <xs:selector xpath="item"></xs:selector>
                    <xs:field xpath="@name"></xs:field>
                </xs:key>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="compositesType">
        <xs:sequence>
            <xs:element name="item" type="itemType" minOccurs="1" maxOccurs="unbounded">
                <xs:key name="itemItemName">
                    <xs:selector xpath="item"></xs:selector>
                    <xs:field xpath="@name"></xs:field>
                </xs:key>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="string">
        <xs:complexContent>
        <xs:extension base="argumentType">
            <xs:attribute name="translate" type="xs:boolean"/>
        </xs:extension>
    </xs:complexContent>
    </xs:complexType>
</xs:schema>
